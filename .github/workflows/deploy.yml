name: Deploy Laravel to Hostinger

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, intl, pdo_mysql, bcmath, openssl
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies (prod)
        run: |
          composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      # Build the release folder while excluding server-only files
      - name: Build release folder
        run: |
          rsync -a --delete \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude=".env" \
            --exclude="storage/" \
            ./ ./release/

      - name: Add host key (avoid interactive prompt)
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${{ secrets.HOSTINGER_PORT }}" "${{ secrets.HOSTINGER_HOST }}" >> ~/.ssh/known_hosts

      # Upload code to Hostinger, protecting .env and storage on the server
      - name: Upload via rsync over SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOSTINGER_PRIVATE_KEY }}
          HOST: ${{ secrets.HOSTINGER_HOST }}
          PORT: ${{ secrets.HOSTINGER_PORT }}
          USER: ${{ secrets.HOSTINGER_USER }}
          TARGET: ${{ secrets.HOSTINGER_PATH }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          rsync -az --delete \
            --chmod=Du=rwx,Dg=rwx,Do=rx,Fu=rw,Fg=rw,Fo=r \
            --exclude=".env" \
            --exclude="storage/" \
            -e "ssh -p ${PORT}" \
            release/ "${USER}@${HOST}:${TARGET}/"

      - name: Post-deploy artisan & permissions
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOSTINGER_PRIVATE_KEY }}
          HOST: ${{ secrets.HOSTINGER_HOST }}
          PORT: ${{ secrets.HOSTINGER_PORT }}
          USER: ${{ secrets.HOSTINGER_USER }}
          TARGET: ${{ secrets.HOSTINGER_PATH }}
          PHP_CLI: ${{ secrets.PHP_CLI }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          PHP_BIN="${PHP_CLI:-php}"

          # NOTE: unquoted EOF so ${TARGET} and ${PHP_BIN} expand locally
          ssh -p "${PORT}" "${USER}@${HOST}" <<EOF
          set -e
          cd "${TARGET}"

          # ensure dirs/files
          mkdir -p storage/logs storage/framework/{cache,sessions,views} bootstrap/cache || true
          [ -f storage/logs/laravel.log ] || touch storage/logs/laravel.log || true

          # perms: dirs 775, files 664
          chmod 775 bootstrap || true
          chmod 775 bootstrap/cache || true
          find bootstrap/cache -type d -exec chmod 775 {} \; || true
          find bootstrap/cache -type f -exec chmod 664 {} \; || true
          find storage -type d -exec chmod 775 {} \; || true
          find storage -type f -exec chmod 664 {} \; || true

          # Laravel housekeeping
          ${PHP_BIN} artisan storage:link || true
          ${PHP_BIN} artisan config:clear || true
          ${PHP_BIN} artisan config:cache || true
          ${PHP_BIN} artisan route:cache || true
          ${PHP_BIN} artisan view:cache || true
          ${PHP_BIN} artisan migrate --force || true

          # Quick visibility
          ls -ld storage bootstrap bootstrap/cache || true
          EOF

      - name: Health check API
        run: |
          echo "Checking API health..."
          URL="https://prismcloudhosting.com/GoRealEstateApis/public/api/featured-real-estate-projects"
          HTTP_STATUS=$(curl -s -o /tmp/hc_body -w "%{http_code}" "$URL")
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "❌ Health check failed ($HTTP_STATUS). Response body:"
            head -c 400 /tmp/hc_body || true
            exit 1
          fi
          echo "✅ API responded with HTTP $HTTP_STATUS"
