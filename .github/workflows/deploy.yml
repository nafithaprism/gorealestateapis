name: Deploy to AWS ECR (Laravel → Lambda)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: "148761674610"
      AWS_REGION: "us-east-1"              # keep consistent everywhere
      ECR_REPOSITORY: "gorealestateapis"   # your repo name (not URI)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I?
        run: |
          aws sts get-caller-identity
          echo "Region: $AWS_REGION"

      - name: Ensure ECR repository
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null
          ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
          ECR_REPOSITORY_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}"
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "ECR_REPOSITORY_URI=$ECR_REPOSITORY_URI" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region "$AWS_REGION" |
          docker login --username AWS --password-stdin "$ECR_REGISTRY"

      - name: Build and tag Docker image
        run: |
          IMAGE_TAG="${ECR_REPOSITORY_URI}:${{ github.sha }}"
          docker build -t laravel-app .
          docker tag laravel-app:latest "$IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Push Docker image to ECR
        run: docker push "$IMAGE_TAG"

      # (Optional) Update Lambda environment variables in case you changed any
      # UNCOMMENT and edit if you want CI to own env config:
      - name: Update Lambda environment (optional)
        run: |
          aws lambda update-function-configuration \
            --function-name ${{ secrets.LAMBDA_NAME }} \
            --environment "Variables={
              APP_ENV=production,
              APP_DEBUG=false,
              LOG_CHANNEL=stderr,
              LOG_LEVEL=error,
              APP_STORAGE=/tmp,
              CACHE_STORE=file,
              SESSION_DRIVER=cookie,
              QUEUE_CONNECTION=sync,
              FILESYSTEM_DISK=s3,
              DB_CONNECTION=mysql,
              DB_HOST=${{ secrets.DB_HOST }},
              DB_PORT=3306,
              DB_DATABASE=${{ secrets.DB_DATABASE }},
              DB_USERNAME=${{ secrets.DB_USERNAME }},
              DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            }" >/dev/null
          echo "Lambda environment updated."



      - name: Notify deployment success
        run: echo "✅ Deployment to ECR successful!"



