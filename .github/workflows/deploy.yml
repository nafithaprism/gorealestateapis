name: Deploy Laravel (Hostinger)

on:
  push:
    branches: ["main"]         # auto-deploy to ROOT by default (see job.if)
  workflow_dispatch:
    inputs:
      target:
        description: "Where to deploy?"
        type: choice
        options:
          - ROOT
          - PRISM
        required: true
        default: ROOT

env:
  HOST: ${{ secrets.HOSTINGER_HOST }}
  PORT: ${{ secrets.HOSTINGER_PORT }}
  USER: ${{ secrets.HOSTINGER_USER }}
  PHP_BIN: ${{ secrets.PHP_CLI }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Auto-deploy on push only to ROOT. Manual runs can choose either.
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, intl, pdo_mysql, bcmath, openssl
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies (prod)
        run: composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader

      - name: Build release folder (keep server .env & storage)
        run: |
          rsync -a --delete \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude=".env" \
            --exclude="storage/" \
            ./ ./release/

      - name: Resolve TARGET path from input
        id: resolve
        run: |
          # default when push -> ROOT; when manual, use input
          TARGET="${{ secrets.HOSTINGER_PATH_ROOT }}"
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.target }}" = "PRISM" ]; then
            TARGET="${{ secrets.HOSTINGER_PATH_PRISM }}"
          fi
          echo "TARGET=$TARGET" >> "$GITHUB_OUTPUT"

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "$PORT" "$HOST" >> ~/.ssh/known_hosts

      - name: Upload via rsync
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOSTINGER_PRIVATE_KEY }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          rsync -az --delete \
            --exclude=".env" \
            --exclude="storage/" \
            -e "ssh -p $PORT" \
            release/ "$USER@$HOST:${{ steps.resolve.outputs.TARGET }}/"

      - name: Post-deploy artisan & permissions
        env:
          SSH_PRIVATE_KEY: ${{ secrets.HOSTINGER_PRIVATE_KEY }}
        run: |
          eval "$(ssh-agent -s)"
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          PHP="${PHP_BIN:-php}"
          ssh -p "$PORT" "$USER@$HOST" <<EOF
          set -e
          cd "${{ steps.resolve.outputs.TARGET }}"

          mkdir -p storage/logs storage/framework/{cache,sessions,views} bootstrap/cache
          [ -f storage/logs/laravel.log ] || touch storage/logs/laravel.log

          # idempotent storage symlink
          if [ ! -L public/storage ]; then $PHP artisan storage:link || true; fi

          # caches & migrations
          $PHP artisan config:cache || true
          $PHP artisan route:cache || true
          $PHP artisan view:cache || true
          $PHP artisan migrate --force || true

          # shared hosting-safe perms
          find storage -type d -exec chmod 775 {} \; || true
          find bootstrap/cache -type d -exec chmod 775 {} \; || true
          find storage -type f -exec chmod 664 {} \; || true
          find bootstrap/cache -type f -exec chmod 664 {} \; || true
          EOF
